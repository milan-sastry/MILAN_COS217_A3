Assignment 3 readme File

------------------------------------------------------------------------
What is your name?

Milan Sastry

------------------------------------------------------------------------
What authorized sources of information did you use to complete the
assignment? COPY THE LIST of authorized sources of information given
in the "Policies" web page (also available on armlab in the file
~cos217/AuthorizedSourcesList ) to this section of the readme file,
and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.


------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None

------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

Helpful and fun.

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate on symtablelist.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None

------------------------------------------------------------------------
What warnings does critTer generate on symtablelist.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

 symtablelist.c: line 67: medium priority:
   Do you want to validate 'pvValue' through an assert?

   symtablelist.c: line 90: medium priority:
   Do you want to validate 'pvValue' through an assert?

   symtablelist.c: line 169: medium priority:
   Do you want to validate 'pvExtra' through an assert?

   When I tried to use an assert statement to validate these parameters,
   I got an error saying the assertion failed, and the test was aborted.
   Thus, I decided not to assert that these void pointers were not NULL.

------------------------------------------------------------------------
What warnings does splint generate on symtablehash.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."



------------------------------------------------------------------------
What warnings does critTer generate on symtablehash.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

   symtablehash.c: line 143: medium priority:
   Do you want to validate 'pvValue' through an assert?

   symtablehash.c: line 171: medium priority:
   Do you want to validate 'pvValue' through an assert?

   symtablehash.c: line 252: medium priority:
   Do you want to validate 'pvExtra' through an assert?

   When I tried to use an assert statement to validate these parameters,
   I got an error saying the assertion failed, and the test was aborted.
   Thus, I decided not to assert that these void pointers were not NULL.

------------------------------------------------------------------------
What are the CPU times reported by testsymtable.c with binding counts
50, 500, 5000, 50000, and 500000 using (1) your linked list
implementation, (2) your non-expanding hash table implementation, and
(3) your expanding hash table implementation? Fill in the blanks.

The linked list implementation with:
-- 50 bindings consumed 0 seconds.
-- 500 bindings consumed 0.006318 seconds.
-- 5000 bindings consumed 1.092355 seconds.
-- 50000 bindings consumed 109.507650 seconds.
-- 500000 bindings consumed over 5 minutes.

The non-expanding hash table implementation with:
-- 50 bindings consumed 0 seconds.
-- 500 bindings consumed 0 seconds.
-- 5000 bindings consumed 0.013090 seconds.
-- 50000 bindings consumed 0.433287 seconds.
-- 500000 bindings consumed 80.763167 seconds.

The expanding hash table implementation with:
-- 50 bindings consumed 0 seconds.
-- 500 bindings consumed 0 seconds.
-- 5000 bindings consumed 0.008197 seconds.
-- 50000 bindings consumed 0.142399 seconds.
-- 500000 bindings consumed 1.779857 seconds.
